// Generated by CoffeeScript 1.8.0
(function() {
  var ObjectView,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ObjectView = (function(_super) {
    __extends(ObjectView, _super);

    function ObjectView() {
      this.fadeIn = __bind(this.fadeIn, this);
      return ObjectView.__super__.constructor.apply(this, arguments);
    }

    ObjectView.prototype.supportsOversizing = false;

    ObjectView.prototype.fadeIn = function() {
      this.visible = true;
      return this.$el.addClass('uberbox-visible');
    };

    ObjectView.prototype.getAspectRatio = function() {
      return this.$el.width() / this.$el.height();
    };

    ObjectView.prototype.isObjectLoaded = function() {};

    ObjectView.prototype.getObjectNaturalAspectRatio = function() {};

    ObjectView.prototype.layoutOversized = function() {};

    ObjectView.prototype.getTemplate = function() {
      return this.getOption('template')();
    };

    return ObjectView;

  })(Marionette.ItemView);

  Uberbox.ImageObjectView = (function(_super) {
    __extends(ImageObjectView, _super);

    function ImageObjectView() {
      this.onObjectLoaded = __bind(this.onObjectLoaded, this);
      return ImageObjectView.__super__.constructor.apply(this, arguments);
    }

    ImageObjectView.prototype.className = 'uberbox-image-content';

    ImageObjectView.prototype.waitForLoad = true;

    ImageObjectView.prototype.supportsOversizing = true;

    ImageObjectView.prototype.template = function() {
      return Uberbox.Templates['content-image'];
    };

    ImageObjectView.prototype.ui = {
      image: 'img'
    };

    ImageObjectView.prototype.bindUIElements = function() {
      ImageObjectView.__super__.bindUIElements.apply(this, arguments);
      if (this.isObjectLoaded()) {
        this.onObjectLoaded();
      }
      this.ui.image.one('load.uberbox', this.onObjectLoaded);
      return this.ui.image.one('error.uberbox', this.onObjectError);
    };

    ImageObjectView.prototype.unbindUIElements = function() {
      this.ui.image.off('load.uberbox');
      this.ui.image.off('error.uberbox');
      return ImageObjectView.__super__.unbindUIElements.apply(this, arguments);
    };

    ImageObjectView.prototype.getWidth = function() {
      return this.$el.width();
    };

    ImageObjectView.prototype.getObjectWidth = function() {
      return this.ui.image.width();
    };

    ImageObjectView.prototype.isObjectLoaded = function() {
      return this.ui.image[0].complete;
    };

    ImageObjectView.prototype.getObjectNaturalWidth = function() {
      return this.ui.image[0].naturalWidth;
    };

    ImageObjectView.prototype.getObjectNaturalHeight = function() {
      return this.ui.image[0].naturalHeight;
    };

    ImageObjectView.prototype.getObjectNaturalAspectRatio = function() {
      var image;
      image = this.ui.image[0];
      return image.naturalWidth / image.naturalHeight;
    };

    ImageObjectView.prototype.onObjectError = function() {
      return this.trigger('error');
    };

    ImageObjectView.prototype.onObjectLoaded = function() {
      return this.trigger('load');
    };

    return ImageObjectView;

  })(ObjectView);

}).call(this);
