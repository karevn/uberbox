// Generated by CoffeeScript 1.8.0
(function() {
  var argv, autoprefixer, banner, beautify, beautifyCSS, coffee, concat, fs, gulp, gutil, handleError, header, merge, minifyCSS, pkg, rename, sass, sourcemaps, sources, templateCompile, uglify, util, watch, wrap;

  pkg = require('./package.json');

  argv = require('minimist')(process.argv.slice(2));

  gulp = require('gulp');

  util = require('gulp-util');

  coffee = require('gulp-coffee');

  header = require('gulp-header');

  concat = require('gulp-concat');

  uglify = require('gulp-uglify');

  watch = require('gulp-watch');

  wrap = require('gulp-wrap');

  sourcemaps = require('gulp-sourcemaps');

  beautify = require('gulp-jsbeautifier');

  sass = require('gulp-sass');

  autoprefixer = require('gulp-autoprefixer');

  beautifyCSS = require('gulp-cssbeautify');

  minifyCSS = require('gulp-minify-css');

  gutil = require('gulp-util');

  rename = require('gulp-rename');

  fs = require('fs');

  templateCompile = require('gulp-template-compile');

  merge = require('gulp-merge');

  banner = function() {
    return ['// Uberbox.js', '// version: ' + pkg.version, '// author: ' + pkg.author, '// license: ' + pkg.licenses[0].type].join('\n') + '\n';
  };

  sources = ['uberbox', 'utils', 'models', 'sliding_window_item', 'sliding_window', 'carousel', 'toolbar', 'item_views', 'lightbox'].map(function(file) {
    return "src/" + file + ".coffee";
  });

  handleError = function(error) {
    util.log;
    return this.emit('end');
  };

  gulp.task('jst', function() {
    return gulp.src('./templates/*.html').pipe(templateCompile({
      name: (function(name) {
        return name.relative.replace('.html', '');
      }),
      namespace: 'Uberbox.Templates'
    }).on('error', function() {
      return this.emit('end');
    })).pipe(concat('templates.js')).pipe(gulp.dest('./dist'));
  });

  gulp.task('js', ['jst'], function() {
    var sourcesStream;
    sourcesStream = gulp.src(sources).pipe(coffee({
      bare: true
    }).on('error', (function() {
      gutil.log(arguments);
      return this.emit('end');
    }))).pipe(concat('uberbox.js'));
    return sourcesStream.pipe(wrap({
      src: 'exports.js.template'
    })).pipe(header(banner())).pipe(beautify()).pipe(gulp.dest('dist')).on('error', handleError);
  });

  gulp.task('jsmin', ['js'], function() {
    return gulp.src(['./dist/templates.js', './dist/uberbox.js']).pipe(concat('uberbox.min.js')).pipe(uglify()).pipe(gulp.dest('dist'));
  });

  gulp.task('css', function() {
    var css;
    css = gulp.src('./uberbox.sass').pipe(sourcemaps.init()).pipe(sass({
      indentedSyntax: true,
      errLogToConsole: true
    }).on('error', function() {
      return this.emit('end');
    })).pipe(autoprefixer('last 2 version', 'safari 5', 'ie 9', 'opera 12.1', 'ios 6', 'android 4'));
    css = css.pipe(beautifyCSS()).pipe(sourcemaps.write(".")).pipe(gulp.dest('dist')).on('error', handleError);
    return css.pipe(minifyCSS()).pipe(rename('uberbox.min.css')).pipe(sourcemaps.write(".")).pipe(gulp.dest('dist')).on('error', handleError);
  });

  gulp.task('build', ['js', 'css']);

  gulp.task('watch', function() {
    gulp.watch(['src/*.coffee', 'templates/*.html', 'exports.js.template'], ['js']);
    return gulp.watch(['*.sass'], ['css']);
  });

  gulp.task('default', ['build', 'watch']);

}).call(this);
